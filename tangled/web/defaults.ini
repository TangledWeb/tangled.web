[app]
debug = false
debug.pdb = false

tangled.app.csrf.enabled = false
tangled.app.default_content_type = text/html
tangled.app.error_resource =
tangled.app.exc_log_message_factory = tangled.web.exc:get_exc_log_message
tangled.app.name =
tangled.app.helpers_factory = tangled.web.abcs:AHelpers
tangled.app.includes =
tangled.app.on_created =
tangled.app.represent_args =
tangled.app.request_factory = tangled.web:Request
tangled.app.response_factory = tangled.web:Response
tangled.app.resources =
tangled.app.scan =
tangled.app.set_accept_from_ext = true
tangled.app.static_directories =
tangled.app.tunnel_over_post = DELETE PUT

; System handlers (listed in chain order)
tangled.app.handler.exc = tangled.web.handlers:exc_handler
tangled.app.handler.static_files = tangled.web.handlers:static_files
tangled.app.handler.tweaker = tangled.web.handlers:tweaker
tangled.app.handler.notifier = tangled.web.handlers:notifier
tangled.app.handler.resource_finder = tangled.web.handlers:resource_finder
tangled.app.handler.csrf = tangled.web.csrf:csrf_handler
tangled.app.handler.main = tangled.web.handlers:main

; Optional, app-specific handlers
tangled.app.handlers = tangled.web.handlers:timer

; A subclass of json.encoder.JSONEncoder from the stdlib. If specified,
; it should provide an implementation of the default() method; it will
; be passed to json.dumps() as `cls`.
tangled.app.representation.json.encoder =
; A function that converts an object to a value the encoder can handle.
; This can be used in conjunction with a custom encoder or instead of
; one. If specified, it will be passed to json.dumps() as `default`.
tangled.app.representation.json.encoder.default =

[loggers]
keys = root, exc, tangled

[handlers]
keys = console, exc

[formatters]
keys = generic, exc

[logger_root]
level = WARN
handlers = console

[logger_tangled]
level = DEBUG
handlers =
qualname = tangled

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s

# Exc Logger
[logger_exc]
level = ERROR
handlers = exc
qualname = exc
propagate = 0

[handler_exc]
class = StreamHandler
args = (sys.stderr,)
level = ERROR
formatter = exc

[formatter_exc]
format = %(asctime)s %(levelname)s %(message)s
